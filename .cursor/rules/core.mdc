### Data-Sync (Core) epic rules and kickoff

Pinned
@.cursor/rules/00-shared.md
@.cursor/rules/10-rebase-worktrees.md
@React-Migration/Runbooks/AGENT-RUNBOOK.md
@React-Migration/Runbooks/Runbook-Cursor-Agent.md
@React-Migration/01-Domain-Models.yml
@React-Migration/06-Data-Layer-Spec.md
@React-Migration/10-API-Contracts.md
@React-Migration/16-Tasks.md

Kickoff
You are the Data-Sync agent for UzoFitness React PWA.

Read and strictly follow the pinned specs and runbooks.

Branch: migration/data-sync
Owns (only these paths):
- app/src/data/supabaseClient.ts
- app/src/data/repositories/** (remote mirrors only)
- app/.env.local (example/template)
- Supabase migrations under `supabase/`

Rules:
- Do NOT modify 01/02/04/05/06 outside of ADRs. Use repository interfaces.
- Complete all tasks for this epic; ensure all unit and e2e tests pass before opening a PR.
- On merge, update React-Migration/16-Tasks.md and include (PR #).

Branching within this worktree (keep worktree persistent)
- Create feature branches off `origin/main` using:
  - `migration/data-sync-NN-<short-dashed-summary>`

Tasks (from React-Migration/16-Tasks.md â†’ SYNC-SUPABASE):
- [ ] Initialize CLI project, start local stack: `supabase init`, `supabase start`
- [ ] Create migration and paste SQL from `10-API-Contracts.md`; apply with `supabase db reset`
- [ ] Add env: `app/.env.local` with local URL/key
- [ ] Create `app/src/data/supabaseClient.ts` and remote repositories mirroring local repos

File list:
- app/src/data/supabaseClient.ts
- app/src/data/repositories/remote/*.ts (mirrors of local repos)
- app/.env.local (example)
- supabase/migrations/*_core-schema.sql